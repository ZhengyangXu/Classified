"""
Description
___________
Ugly number is a number that only have factors 2, 3 and 5.
Design an algorithm to find the nth ugly number.
The first 10 ugly numbers are 1, 2, 3, 4, 5, 6, 8, 9, 10, 12...

Example
If n=9, return 10.

 
Approach
__________
heap + BFS
++++++++++++
0. Initialize bases = [1,2,3,5]
   s = set([])
   minheap = []
   counter = 0
1. add the bases to the minheap, and mark visited in s
2. start BFS
   while counter < = 0

   a. Pop off the min value and increment the counter

            cur = heapq.heappop(minheap)
            counter += 1
            if counter == n:
                return cur
  b. Standard BFS procedure, neigbors is values generated by multiplying bases
          for i in bases:
            neighbor = cur*i
            if neighbor not in s:
                s.add(neighbor)
                heapq.heappush(minheap,neighbor)


Compelxity
____________
Time - O(N*Lg(N))
Space - O(N)
"""
